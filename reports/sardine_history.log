Traceback (most recent call last):
  File "/home/leron/.local/lib/python3.6/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/home/leron/.local/lib/python3.6/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/leron/.local/lib/python3.6/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/leron/.local/lib/python3.6/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.6/asyncio/base_events.py", line 484, in run_until_complete
    return future.result()
  File "/home/leron/.local/lib/python3.6/site-packages/nbclient/client.py", line 554, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/home/leron/.local/lib/python3.6/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/leron/.local/lib/python3.6/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# clean and process landing data (time series version)
fish_count_ts_df = landing_summary_ts.filter(['Year','SpeciesName'],axis=1)
fish_count_ts_df.drop(fish_count_ts_df.tail(5).index,inplace=True)

# filter dataframe for sardine, groupby year, find counts per year, and rename columns
sardine_ts2 = fish_count_ts_df[fish_count_ts_df['SpeciesName']=='Sardine, Pacific              '].groupby('Year').count().reset_index().rename(columns={'SpeciesName':'Count'})

# relabel column
sardine_ts2['Species'] = 'Sardine'

# create new variable that keeps track of "year" -> used to animate the line graph
data_sardine = []
for y in sardine_ts2['Year'].unique():
    df = sardine_ts2[sardine_ts2.Year<=y].copy()
    df['year_upto'] = y
    data_sardine.append(df)
sardine_ts_animated = pd.concat(data_sardine)

# convert Year column into integers
sardine_ts_animated.Year = sardine_ts_animated.Year.astype(int)

# generate line plot
fig_sardine_animated = px.line(
    sardine_ts_animated,
    x = 'Year',
    y = 'Count',
    animation_frame = 'year_upto',
    range_x = [1949,2022],
    hover_name = 'Count',
    hover_data =['Count'],
    title = 'Sardine Abundance, By Year',
    labels = {'Count':'Sardine Abundance','Year':'Year','year_upto':'Year'},
    template = 'plotly'
)

# configure axis ranges
fig_sardine_animated.update_xaxes(autorange=False)
fig_sardine_animated.update_yaxes(range=[0,7500])

# configure window layout and display plot
fig_sardine_animated.update_layout(autosize=True)
fig_sardine_animated.show(animate=True,autorange=False)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
[0;32m<ipython-input-3-542b819dd9b1>[0m in [0;36m<module>[0;34m[0m
[1;32m      1[0m [0;31m# clean and process landing data (time series version)[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 2[0;31m [0mfish_count_ts_df[0m [0;34m=[0m [0mlanding_summary_ts[0m[0;34m.[0m[0mfilter[0m[0;34m([0m[0;34m[[0m[0;34m'Year'[0m[0;34m,[0m[0;34m'SpeciesName'[0m[0;34m][0m[0;34m,[0m[0maxis[0m[0;34m=[0m[0;36m1[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      3[0m [0mfish_count_ts_df[0m[0;34m.[0m[0mdrop[0m[0;34m([0m[0mfish_count_ts_df[0m[0;34m.[0m[0mtail[0m[0;34m([0m[0;36m5[0m[0;34m)[0m[0;34m.[0m[0mindex[0m[0;34m,[0m[0minplace[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      4[0m [0;34m[0m[0m
[1;32m      5[0m [0;31m# filter dataframe for sardine, groupby year, find counts per year, and rename columns[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;31mNameError[0m: name 'landing_summary_ts' is not defined
NameError: name 'landing_summary_ts' is not defined

